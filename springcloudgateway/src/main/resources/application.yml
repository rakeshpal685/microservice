#Telling where to look for eureka
eureka:
    client:
        fetch-registry: true
        register-with-eureka: true
        service-url:
            defaultZone: http://localhost:8761/eureka/
    instance:
        prefer-ip-address: true

#exposing all the endpoints for admin server
management:
    endpoints:
        web:
            exposure:
                include: '*'

# server port
server:
    port: 8084


#registering the name in the eureka server and telling the port of admin server
spring:
    application:
        name: API-GATEWAY
    boot:
        admin:
            client:
                url: http://localhost:1111/
#registering the services to the gateway
    cloud:
        gateway:
          discovery.locator:
            enabled: true
            lowerCaseServiceId: true
          routes:
#id can be anything
            - id: EMPLOYEE
#lb stands for load balanced, so for the given uri the request should be navigated to the predicates, the uri
#name should match with the eureka registered name of the service
              uri: lb://EMPLOYEE-SERVICE
              predicates:
                  - Path=/empController/**
# If we have more than one controller in our microservice then we can use ,/controller_path over here in the Path

            - id: xyz
              uri: lb://STUDENT-SERVICE
              predicates:
                  - Path=/studController/**
